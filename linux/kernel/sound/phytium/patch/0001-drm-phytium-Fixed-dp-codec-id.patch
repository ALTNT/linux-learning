From 3973ebd279570cdee84a34dd66dfb51cb064db40 Mon Sep 17 00:00:00 2001
From: yx <yx@example.com>
Date: Mon, 6 Mar 2023 22:32:39 -0800
Subject: [PATCH] drm/phytium: Fixed dp codec id

Previously, the dp codec id was automatically generated by the system.
It is an uncertain value for the sound card.
---
 phytium/phytium_dp.c | 25 +++++++++++++++++++++++--
 phytium/phytium_dp.h |  1 +
 2 files changed, 24 insertions(+), 2 deletions(-)

diff --git a/phytium/phytium_dp.c b/phytium/phytium_dp.c
index 5e81a9c..6ea8e89 100644
--- a/phytium/phytium_dp.c
+++ b/phytium/phytium_dp.c
@@ -27,8 +27,10 @@ static void phytium_dp_aux_init(struct phytium_dp_device *phytium_dp);
 static void handle_plugged_change(struct phytium_dp_device *phytium_dp, bool plugged);
 static bool phytium_edp_init_connector(struct phytium_dp_device *phytium_dp);
 static void phytium_edp_panel_poweroff(struct phytium_dp_device *phytium_dp);
+static void phytium_dp_audio_codec_fini(struct phytium_dp_device *phytium_dp);
 
 static int phytium_rate[] = {162000, 270000, 540000, 810000};
+static int codec_id = PHYTIUM_DP_AUDIO_ID;
 
 void phytium_phy_writel(struct phytium_dp_device *phytium_dp, uint32_t address, uint32_t data)
 {
@@ -2249,8 +2251,16 @@ static const struct drm_encoder_helper_funcs phytium_encoder_helper_funcs = {
 	.enable  = phytium_encoder_enable,
 };
 
+void phytium_dp_encoder_destroy(struct drm_encoder *encoder)
+{
+	struct phytium_dp_device *phytium_dp = encoder_to_dp_device(encoder);
+
+	phytium_dp_audio_codec_fini(phytium_dp);
+	drm_encoder_cleanup(encoder);
+}
+
 static const struct drm_encoder_funcs phytium_encoder_funcs = {
-	.destroy = drm_encoder_cleanup,
+	.destroy = phytium_dp_encoder_destroy,
 };
 
 static const struct dp_audio_n_m phytium_dp_audio_n_m[] = {
@@ -2415,12 +2425,23 @@ static int phytium_dp_audio_codec_init(struct phytium_dp_device *phytium_dp)
 	};
 
 	phytium_dp->audio_pdev = platform_device_register_data(dev, HDMI_CODEC_DRV_NAME,
-							       PLATFORM_DEVID_AUTO,
+							       codec_id,
 							       &codec_data, sizeof(codec_data));
+	if (!PTR_ERR_OR_ZERO(phytium_dp->audio_pdev))
+		codec_id += 1;
 
 	return PTR_ERR_OR_ZERO(phytium_dp->audio_pdev);
 }
 
+static void phytium_dp_audio_codec_fini(struct phytium_dp_device *phytium_dp)
+{
+
+	if (!PTR_ERR_OR_ZERO(phytium_dp->audio_pdev))
+		platform_device_unregister(phytium_dp->audio_pdev);
+	phytium_dp->audio_pdev = NULL;
+	codec_id -= 1;
+}
+
 static long phytium_dp_aux_transfer(struct drm_dp_aux *aux, struct drm_dp_aux_msg *msg)
 {
 	struct phytium_dp_device *phytium_dp = container_of(aux, struct phytium_dp_device, aux);
diff --git a/phytium/phytium_dp.h b/phytium/phytium_dp.h
index 532c041..115b496 100644
--- a/phytium/phytium_dp.h
+++ b/phytium/phytium_dp.h
@@ -137,6 +137,7 @@ enum phytium_dpcd_phy_tp {
 	PHYTIUM_PHY_TP_CP2520_2,
 	PHYTIUM_PHY_TP_CP2520_3,
 };
+#define PHYTIUM_DP_AUDIO_ID	(('P' << 24) + ('H' << 16) + ('Y' << 8))
 #define encoder_to_dp_device(x) container_of(x, struct phytium_dp_device, encoder)
 #define connector_to_dp_device(x) container_of(x, struct phytium_dp_device, connector)
 #define panel_to_dp_device(x) container_of(x, struct phytium_dp_device, panel)
-- 
2.17.1

